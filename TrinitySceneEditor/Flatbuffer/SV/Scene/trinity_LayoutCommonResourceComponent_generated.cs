// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct trinity_LayoutCommonResourceComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static trinity_LayoutCommonResourceComponent GetRootAstrinity_LayoutCommonResourceComponent(ByteBuffer _bb) { return GetRootAstrinity_LayoutCommonResourceComponent(_bb, new trinity_LayoutCommonResourceComponent()); }
  public static trinity_LayoutCommonResourceComponent GetRootAstrinity_LayoutCommonResourceComponent(ByteBuffer _bb, trinity_LayoutCommonResourceComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public trinity_LayoutCommonResourceComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string FilePath { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFilePathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetFilePathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetFilePathArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Titan.TrinityScene.trinity_LayoutCommonResourceComponent> Createtrinity_LayoutCommonResourceComponent(FlatBufferBuilder builder,
      StringOffset file_pathOffset = default(StringOffset)) {
    builder.StartTable(1);
    trinity_LayoutCommonResourceComponent.AddFilePath(builder, file_pathOffset);
    return trinity_LayoutCommonResourceComponent.Endtrinity_LayoutCommonResourceComponent(builder);
  }

  public static void Starttrinity_LayoutCommonResourceComponent(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddFilePath(FlatBufferBuilder builder, StringOffset filePathOffset) { builder.AddOffset(0, filePathOffset.Value, 0); }
  public static Offset<Titan.TrinityScene.trinity_LayoutCommonResourceComponent> Endtrinity_LayoutCommonResourceComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.trinity_LayoutCommonResourceComponent>(o);
  }
  public static void Finishtrinity_LayoutCommonResourceComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_LayoutCommonResourceComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedtrinity_LayoutCommonResourceComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_LayoutCommonResourceComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public trinity_LayoutCommonResourceComponentT UnPack() {
    var _o = new trinity_LayoutCommonResourceComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(trinity_LayoutCommonResourceComponentT _o) {
    _o.FilePath = this.FilePath;
  }
  public static Offset<Titan.TrinityScene.trinity_LayoutCommonResourceComponent> Pack(FlatBufferBuilder builder, trinity_LayoutCommonResourceComponentT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.trinity_LayoutCommonResourceComponent>);
    var _file_path = _o.FilePath == null ? default(StringOffset) : builder.CreateString(_o.FilePath);
    return Createtrinity_LayoutCommonResourceComponent(
      builder,
      _file_path);
  }
}

public class trinity_LayoutCommonResourceComponentT
{
  public string FilePath { get; set; }

  public trinity_LayoutCommonResourceComponentT() {
    this.FilePath = null;
  }
  public static trinity_LayoutCommonResourceComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return trinity_LayoutCommonResourceComponent.GetRootAstrinity_LayoutCommonResourceComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    trinity_LayoutCommonResourceComponent.Finishtrinity_LayoutCommonResourceComponentBuffer(fbb, trinity_LayoutCommonResourceComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
