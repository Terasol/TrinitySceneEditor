// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct trinity_LayoutComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static trinity_LayoutComponent GetRootAstrinity_LayoutComponent(ByteBuffer _bb) { return GetRootAstrinity_LayoutComponent(_bb, new trinity_LayoutComponent()); }
  public static trinity_LayoutComponent GetRootAstrinity_LayoutComponent(ByteBuffer _bb, trinity_LayoutComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public trinity_LayoutComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string FilePath { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFilePathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetFilePathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetFilePathArray() { return __p.__vector_as_array<byte>(4); }
  public string LayoutFileName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLayoutFileNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetLayoutFileNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetLayoutFileNameArray() { return __p.__vector_as_array<byte>(6); }
  public uint Unk2 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool Unk3 { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string ComponentName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetComponentNameBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetComponentNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetComponentNameArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<Titan.TrinityScene.trinity_LayoutComponent> Createtrinity_LayoutComponent(FlatBufferBuilder builder,
      StringOffset file_pathOffset = default(StringOffset),
      StringOffset layout_file_nameOffset = default(StringOffset),
      uint unk_2 = 0,
      bool unk_3 = false,
      StringOffset component_nameOffset = default(StringOffset)) {
    builder.StartTable(5);
    trinity_LayoutComponent.AddComponentName(builder, component_nameOffset);
    trinity_LayoutComponent.AddUnk2(builder, unk_2);
    trinity_LayoutComponent.AddLayoutFileName(builder, layout_file_nameOffset);
    trinity_LayoutComponent.AddFilePath(builder, file_pathOffset);
    trinity_LayoutComponent.AddUnk3(builder, unk_3);
    return trinity_LayoutComponent.Endtrinity_LayoutComponent(builder);
  }

  public static void Starttrinity_LayoutComponent(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddFilePath(FlatBufferBuilder builder, StringOffset filePathOffset) { builder.AddOffset(0, filePathOffset.Value, 0); }
  public static void AddLayoutFileName(FlatBufferBuilder builder, StringOffset layoutFileNameOffset) { builder.AddOffset(1, layoutFileNameOffset.Value, 0); }
  public static void AddUnk2(FlatBufferBuilder builder, uint unk2) { builder.AddUint(2, unk2, 0); }
  public static void AddUnk3(FlatBufferBuilder builder, bool unk3) { builder.AddBool(3, unk3, false); }
  public static void AddComponentName(FlatBufferBuilder builder, StringOffset componentNameOffset) { builder.AddOffset(4, componentNameOffset.Value, 0); }
  public static Offset<Titan.TrinityScene.trinity_LayoutComponent> Endtrinity_LayoutComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.trinity_LayoutComponent>(o);
  }
  public static void Finishtrinity_LayoutComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_LayoutComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedtrinity_LayoutComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_LayoutComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public trinity_LayoutComponentT UnPack() {
    var _o = new trinity_LayoutComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(trinity_LayoutComponentT _o) {
    _o.FilePath = this.FilePath;
    _o.LayoutFileName = this.LayoutFileName;
    _o.Unk2 = this.Unk2;
    _o.Unk3 = this.Unk3;
    _o.ComponentName = this.ComponentName;
  }
  public static Offset<Titan.TrinityScene.trinity_LayoutComponent> Pack(FlatBufferBuilder builder, trinity_LayoutComponentT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.trinity_LayoutComponent>);
    var _file_path = _o.FilePath == null ? default(StringOffset) : builder.CreateString(_o.FilePath);
    var _layout_file_name = _o.LayoutFileName == null ? default(StringOffset) : builder.CreateString(_o.LayoutFileName);
    var _component_name = _o.ComponentName == null ? default(StringOffset) : builder.CreateString(_o.ComponentName);
    return Createtrinity_LayoutComponent(
      builder,
      _file_path,
      _layout_file_name,
      _o.Unk2,
      _o.Unk3,
      _component_name);
  }
}

public class trinity_LayoutComponentT
{
  public string FilePath { get; set; }
  public string LayoutFileName { get; set; }
  public uint Unk2 { get; set; }
  public bool Unk3 { get; set; }
  public string ComponentName { get; set; }

  public trinity_LayoutComponentT() {
    this.FilePath = null;
    this.LayoutFileName = null;
    this.Unk2 = 0;
    this.Unk3 = false;
    this.ComponentName = null;
  }
  public static trinity_LayoutComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return trinity_LayoutComponent.GetRootAstrinity_LayoutComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    trinity_LayoutComponent.Finishtrinity_LayoutComponentBuffer(fbb, trinity_LayoutComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
