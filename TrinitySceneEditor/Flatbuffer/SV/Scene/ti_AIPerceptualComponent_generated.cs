// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ti_AIPerceptualComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ti_AIPerceptualComponent GetRootAsti_AIPerceptualComponent(ByteBuffer _bb) { return GetRootAsti_AIPerceptualComponent(_bb, new ti_AIPerceptualComponent()); }
  public static ti_AIPerceptualComponent GetRootAsti_AIPerceptualComponent(ByteBuffer _bb, ti_AIPerceptualComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ti_AIPerceptualComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<Titan.TrinityScene.ti_AIPerceptualComponent> Createti_AIPerceptualComponent(FlatBufferBuilder builder,
      byte value = 0) {
    builder.StartTable(1);
    ti_AIPerceptualComponent.AddValue(builder, value);
    return ti_AIPerceptualComponent.Endti_AIPerceptualComponent(builder);
  }

  public static void Startti_AIPerceptualComponent(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValue(FlatBufferBuilder builder, byte value) { builder.AddByte(0, value, 0); }
  public static Offset<Titan.TrinityScene.ti_AIPerceptualComponent> Endti_AIPerceptualComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.ti_AIPerceptualComponent>(o);
  }
  public static void Finishti_AIPerceptualComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.ti_AIPerceptualComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedti_AIPerceptualComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.ti_AIPerceptualComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public ti_AIPerceptualComponentT UnPack() {
    var _o = new ti_AIPerceptualComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ti_AIPerceptualComponentT _o) {
    _o.Value = this.Value;
  }
  public static Offset<Titan.TrinityScene.ti_AIPerceptualComponent> Pack(FlatBufferBuilder builder, ti_AIPerceptualComponentT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.ti_AIPerceptualComponent>);
    return Createti_AIPerceptualComponent(
      builder,
      _o.Value);
  }
}

public class ti_AIPerceptualComponentT
{
  public byte Value { get; set; }

  public ti_AIPerceptualComponentT() {
    this.Value = 0;
  }
  public static ti_AIPerceptualComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return ti_AIPerceptualComponent.GetRootAsti_AIPerceptualComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    ti_AIPerceptualComponent.Finishti_AIPerceptualComponentBuffer(fbb, ti_AIPerceptualComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
