// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct trinity_SceneObjectReference : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static trinity_SceneObjectReference GetRootAstrinity_SceneObjectReference(ByteBuffer _bb) { return GetRootAstrinity_SceneObjectReference(_bb, new trinity_SceneObjectReference()); }
  public static trinity_SceneObjectReference GetRootAstrinity_SceneObjectReference(ByteBuffer _bb, trinity_SceneObjectReference obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public trinity_SceneObjectReference __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ReferencedObject { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReferencedObjectBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetReferencedObjectBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetReferencedObjectArray() { return __p.__vector_as_array<byte>(4); }
  public SRT? Srt { get { int o = __p.__offset(6); return o != 0 ? (SRT?)(new SRT()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Titan.TrinityScene.trinity_SceneObjectReference> Createtrinity_SceneObjectReference(FlatBufferBuilder builder,
      StringOffset referenced_objectOffset = default(StringOffset),
      Offset<SRT> srtOffset = default(Offset<SRT>)) {
    builder.StartTable(2);
    trinity_SceneObjectReference.AddSrt(builder, srtOffset);
    trinity_SceneObjectReference.AddReferencedObject(builder, referenced_objectOffset);
    return trinity_SceneObjectReference.Endtrinity_SceneObjectReference(builder);
  }

  public static void Starttrinity_SceneObjectReference(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddReferencedObject(FlatBufferBuilder builder, StringOffset referencedObjectOffset) { builder.AddOffset(0, referencedObjectOffset.Value, 0); }
  public static void AddSrt(FlatBufferBuilder builder, Offset<SRT> srtOffset) { builder.AddOffset(1, srtOffset.Value, 0); }
  public static Offset<Titan.TrinityScene.trinity_SceneObjectReference> Endtrinity_SceneObjectReference(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.trinity_SceneObjectReference>(o);
  }
  public static void Finishtrinity_SceneObjectReferenceBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_SceneObjectReference> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedtrinity_SceneObjectReferenceBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_SceneObjectReference> offset) { builder.FinishSizePrefixed(offset.Value); }
  public trinity_SceneObjectReferenceT UnPack() {
    var _o = new trinity_SceneObjectReferenceT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(trinity_SceneObjectReferenceT _o) {
    _o.ReferencedObject = this.ReferencedObject;
    _o.Srt = this.Srt.HasValue ? this.Srt.Value.UnPack() : null;
  }
  public static Offset<Titan.TrinityScene.trinity_SceneObjectReference> Pack(FlatBufferBuilder builder, trinity_SceneObjectReferenceT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.trinity_SceneObjectReference>);
    var _referenced_object = _o.ReferencedObject == null ? default(StringOffset) : builder.CreateString(_o.ReferencedObject);
    var _srt = _o.Srt == null ? default(Offset<SRT>) : SRT.Pack(builder, _o.Srt);
    return Createtrinity_SceneObjectReference(
      builder,
      _referenced_object,
      _srt);
  }
}

public class trinity_SceneObjectReferenceT
{
  public string ReferencedObject { get; set; }
  public SRTT Srt { get; set; }

  public trinity_SceneObjectReferenceT() {
    this.ReferencedObject = null;
    this.Srt = null;
  }
  public static trinity_SceneObjectReferenceT DeserializeFromBinary(byte[] fbBuffer) {
    return trinity_SceneObjectReference.GetRootAstrinity_SceneObjectReference(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    trinity_SceneObjectReference.Finishtrinity_SceneObjectReferenceBuffer(fbb, trinity_SceneObjectReference.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
