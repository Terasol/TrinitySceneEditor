// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct trinity_CompoundCapsuleShape : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static trinity_CompoundCapsuleShape GetRootAstrinity_CompoundCapsuleShape(ByteBuffer _bb) { return GetRootAstrinity_CompoundCapsuleShape(_bb, new trinity_CompoundCapsuleShape()); }
  public static trinity_CompoundCapsuleShape GetRootAstrinity_CompoundCapsuleShape(ByteBuffer _bb, trinity_CompoundCapsuleShape obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public trinity_CompoundCapsuleShape __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Unk0 { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUnk0Bytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetUnk0Bytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetUnk0Array() { return __p.__vector_as_array<byte>(4); }
  public Vec3f? Unk1 { get { int o = __p.__offset(6); return o != 0 ? (Vec3f?)(new Vec3f()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public float Unk2 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Unk3 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public Vec3f? Unk4 { get { int o = __p.__offset(12); return o != 0 ? (Vec3f?)(new Vec3f()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<Titan.TrinityScene.trinity_CompoundCapsuleShape> Createtrinity_CompoundCapsuleShape(FlatBufferBuilder builder,
      StringOffset unk_0Offset = default(StringOffset),
      Vec3fT unk_1 = null,
      float unk_2 = 0.0f,
      float unk_3 = 0.0f,
      Vec3fT unk_4 = null) {
    builder.StartTable(5);
    trinity_CompoundCapsuleShape.AddUnk4(builder, Vec3f.Pack(builder, unk_4));
    trinity_CompoundCapsuleShape.AddUnk3(builder, unk_3);
    trinity_CompoundCapsuleShape.AddUnk2(builder, unk_2);
    trinity_CompoundCapsuleShape.AddUnk1(builder, Vec3f.Pack(builder, unk_1));
    trinity_CompoundCapsuleShape.AddUnk0(builder, unk_0Offset);
    return trinity_CompoundCapsuleShape.Endtrinity_CompoundCapsuleShape(builder);
  }

  public static void Starttrinity_CompoundCapsuleShape(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddUnk0(FlatBufferBuilder builder, StringOffset unk0Offset) { builder.AddOffset(0, unk0Offset.Value, 0); }
  public static void AddUnk1(FlatBufferBuilder builder, Offset<Vec3f> unk1Offset) { builder.AddStruct(1, unk1Offset.Value, 0); }
  public static void AddUnk2(FlatBufferBuilder builder, float unk2) { builder.AddFloat(2, unk2, 0.0f); }
  public static void AddUnk3(FlatBufferBuilder builder, float unk3) { builder.AddFloat(3, unk3, 0.0f); }
  public static void AddUnk4(FlatBufferBuilder builder, Offset<Vec3f> unk4Offset) { builder.AddStruct(4, unk4Offset.Value, 0); }
  public static Offset<Titan.TrinityScene.trinity_CompoundCapsuleShape> Endtrinity_CompoundCapsuleShape(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.trinity_CompoundCapsuleShape>(o);
  }
  public static void Finishtrinity_CompoundCapsuleShapeBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_CompoundCapsuleShape> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedtrinity_CompoundCapsuleShapeBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_CompoundCapsuleShape> offset) { builder.FinishSizePrefixed(offset.Value); }
  public trinity_CompoundCapsuleShapeT UnPack() {
    var _o = new trinity_CompoundCapsuleShapeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(trinity_CompoundCapsuleShapeT _o) {
    _o.Unk0 = this.Unk0;
    _o.Unk1 = this.Unk1.HasValue ? this.Unk1.Value.UnPack() : null;
    _o.Unk2 = this.Unk2;
    _o.Unk3 = this.Unk3;
    _o.Unk4 = this.Unk4.HasValue ? this.Unk4.Value.UnPack() : null;
  }
  public static Offset<Titan.TrinityScene.trinity_CompoundCapsuleShape> Pack(FlatBufferBuilder builder, trinity_CompoundCapsuleShapeT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.trinity_CompoundCapsuleShape>);
    var _unk_0 = _o.Unk0 == null ? default(StringOffset) : builder.CreateString(_o.Unk0);
    return Createtrinity_CompoundCapsuleShape(
      builder,
      _unk_0,
      _o.Unk1,
      _o.Unk2,
      _o.Unk3,
      _o.Unk4);
  }
}

public class trinity_CompoundCapsuleShapeT
{
  public string Unk0 { get; set; }
  public Vec3fT Unk1 { get; set; }
  public float Unk2 { get; set; }
  public float Unk3 { get; set; }
  public Vec3fT Unk4 { get; set; }

  public trinity_CompoundCapsuleShapeT() {
    this.Unk0 = null;
    this.Unk1 = new Vec3fT();
    this.Unk2 = 0.0f;
    this.Unk3 = 0.0f;
    this.Unk4 = new Vec3fT();
  }
  public static trinity_CompoundCapsuleShapeT DeserializeFromBinary(byte[] fbBuffer) {
    return trinity_CompoundCapsuleShape.GetRootAstrinity_CompoundCapsuleShape(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    trinity_CompoundCapsuleShape.Finishtrinity_CompoundCapsuleShapeBuffer(fbb, trinity_CompoundCapsuleShape.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
