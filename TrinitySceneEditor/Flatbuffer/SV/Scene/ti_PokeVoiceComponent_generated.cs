// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ti_PokeVoiceComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ti_PokeVoiceComponent GetRootAsti_PokeVoiceComponent(ByteBuffer _bb) { return GetRootAsti_PokeVoiceComponent(_bb, new ti_PokeVoiceComponent()); }
  public static ti_PokeVoiceComponent GetRootAsti_PokeVoiceComponent(ByteBuffer _bb, ti_PokeVoiceComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ti_PokeVoiceComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Name { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<Titan.TrinityScene.ti_PokeVoiceComponent> Createti_PokeVoiceComponent(FlatBufferBuilder builder,
      ushort name = 0) {
    builder.StartTable(1);
    ti_PokeVoiceComponent.AddName(builder, name);
    return ti_PokeVoiceComponent.Endti_PokeVoiceComponent(builder);
  }

  public static void Startti_PokeVoiceComponent(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddName(FlatBufferBuilder builder, ushort name) { builder.AddUshort(0, name, 0); }
  public static Offset<Titan.TrinityScene.ti_PokeVoiceComponent> Endti_PokeVoiceComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.ti_PokeVoiceComponent>(o);
  }
  public static void Finishti_PokeVoiceComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.ti_PokeVoiceComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedti_PokeVoiceComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.ti_PokeVoiceComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public ti_PokeVoiceComponentT UnPack() {
    var _o = new ti_PokeVoiceComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ti_PokeVoiceComponentT _o) {
    _o.Name = this.Name;
  }
  public static Offset<Titan.TrinityScene.ti_PokeVoiceComponent> Pack(FlatBufferBuilder builder, ti_PokeVoiceComponentT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.ti_PokeVoiceComponent>);
    return Createti_PokeVoiceComponent(
      builder,
      _o.Name);
  }
}

public class ti_PokeVoiceComponentT
{
  public ushort Name { get; set; }

  public ti_PokeVoiceComponentT() {
    this.Name = 0;
  }
  public static ti_PokeVoiceComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return ti_PokeVoiceComponent.GetRootAsti_PokeVoiceComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    ti_PokeVoiceComponent.Finishti_PokeVoiceComponentBuffer(fbb, ti_PokeVoiceComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
