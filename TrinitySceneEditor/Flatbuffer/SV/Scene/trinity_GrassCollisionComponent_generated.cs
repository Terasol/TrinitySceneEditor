// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct trinity_GrassCollisionComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static trinity_GrassCollisionComponent GetRootAstrinity_GrassCollisionComponent(ByteBuffer _bb) { return GetRootAstrinity_GrassCollisionComponent(_bb, new trinity_GrassCollisionComponent()); }
  public static trinity_GrassCollisionComponent GetRootAstrinity_GrassCollisionComponent(ByteBuffer _bb, trinity_GrassCollisionComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public trinity_GrassCollisionComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public float Min { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Max { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<Titan.TrinityScene.trinity_GrassCollisionComponent> Createtrinity_GrassCollisionComponent(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      float min = 0.0f,
      float max = 0.0f) {
    builder.StartTable(3);
    trinity_GrassCollisionComponent.AddMax(builder, max);
    trinity_GrassCollisionComponent.AddMin(builder, min);
    trinity_GrassCollisionComponent.AddName(builder, nameOffset);
    return trinity_GrassCollisionComponent.Endtrinity_GrassCollisionComponent(builder);
  }

  public static void Starttrinity_GrassCollisionComponent(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddMin(FlatBufferBuilder builder, float min) { builder.AddFloat(1, min, 0.0f); }
  public static void AddMax(FlatBufferBuilder builder, float max) { builder.AddFloat(2, max, 0.0f); }
  public static Offset<Titan.TrinityScene.trinity_GrassCollisionComponent> Endtrinity_GrassCollisionComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.trinity_GrassCollisionComponent>(o);
  }
  public static void Finishtrinity_GrassCollisionComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_GrassCollisionComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedtrinity_GrassCollisionComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_GrassCollisionComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public trinity_GrassCollisionComponentT UnPack() {
    var _o = new trinity_GrassCollisionComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(trinity_GrassCollisionComponentT _o) {
    _o.Name = this.Name;
    _o.Min = this.Min;
    _o.Max = this.Max;
  }
  public static Offset<Titan.TrinityScene.trinity_GrassCollisionComponent> Pack(FlatBufferBuilder builder, trinity_GrassCollisionComponentT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.trinity_GrassCollisionComponent>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return Createtrinity_GrassCollisionComponent(
      builder,
      _name,
      _o.Min,
      _o.Max);
  }
}

public class trinity_GrassCollisionComponentT
{
  public string Name { get; set; }
  public float Min { get; set; }
  public float Max { get; set; }

  public trinity_GrassCollisionComponentT() {
    this.Name = null;
    this.Min = 0.0f;
    this.Max = 0.0f;
  }
  public static trinity_GrassCollisionComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return trinity_GrassCollisionComponent.GetRootAstrinity_GrassCollisionComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    trinity_GrassCollisionComponent.Finishtrinity_GrassCollisionComponentBuffer(fbb, trinity_GrassCollisionComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
