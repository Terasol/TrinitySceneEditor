// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct pe_AnimationContainerComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static pe_AnimationContainerComponent GetRootAspe_AnimationContainerComponent(ByteBuffer _bb) { return GetRootAspe_AnimationContainerComponent(_bb, new pe_AnimationContainerComponent()); }
  public static pe_AnimationContainerComponent GetRootAspe_AnimationContainerComponent(ByteBuffer _bb, pe_AnimationContainerComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public pe_AnimationContainerComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Unk0(int j) { int o = __p.__offset(4); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int Unk0Length { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Titan.TrinityScene.pe_AnimationContainerComponent> Createpe_AnimationContainerComponent(FlatBufferBuilder builder,
      VectorOffset unk_0Offset = default(VectorOffset)) {
    builder.StartTable(1);
    pe_AnimationContainerComponent.AddUnk0(builder, unk_0Offset);
    return pe_AnimationContainerComponent.Endpe_AnimationContainerComponent(builder);
  }

  public static void Startpe_AnimationContainerComponent(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddUnk0(FlatBufferBuilder builder, VectorOffset unk0Offset) { builder.AddOffset(0, unk0Offset.Value, 0); }
  public static VectorOffset CreateUnk0Vector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateUnk0VectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateUnk0VectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateUnk0VectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartUnk0Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Titan.TrinityScene.pe_AnimationContainerComponent> Endpe_AnimationContainerComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.pe_AnimationContainerComponent>(o);
  }
  public static void Finishpe_AnimationContainerComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.pe_AnimationContainerComponent> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedpe_AnimationContainerComponentBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.pe_AnimationContainerComponent> offset) { builder.FinishSizePrefixed(offset.Value); }
  public pe_AnimationContainerComponentT UnPack() {
    var _o = new pe_AnimationContainerComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(pe_AnimationContainerComponentT _o) {
    _o.Unk0 = new List<string>();
    for (var _j = 0; _j < this.Unk0Length; ++_j) {_o.Unk0.Add(this.Unk0(_j));}
  }
  public static Offset<Titan.TrinityScene.pe_AnimationContainerComponent> Pack(FlatBufferBuilder builder, pe_AnimationContainerComponentT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.pe_AnimationContainerComponent>);
    var _unk_0 = default(VectorOffset);
    if (_o.Unk0 != null) {
      var __unk_0 = new StringOffset[_o.Unk0.Count];
      for (var _j = 0; _j < __unk_0.Length; ++_j) { __unk_0[_j] = builder.CreateString(_o.Unk0[_j]); }
      _unk_0 = CreateUnk0Vector(builder, __unk_0);
    }
    return Createpe_AnimationContainerComponent(
      builder,
      _unk_0);
  }
}

public class pe_AnimationContainerComponentT
{
  public List<string> Unk0 { get; set; }

  public pe_AnimationContainerComponentT() {
    this.Unk0 = null;
  }
  public static pe_AnimationContainerComponentT DeserializeFromBinary(byte[] fbBuffer) {
    return pe_AnimationContainerComponent.GetRootAspe_AnimationContainerComponent(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    pe_AnimationContainerComponent.Finishpe_AnimationContainerComponentBuffer(fbb, pe_AnimationContainerComponent.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
