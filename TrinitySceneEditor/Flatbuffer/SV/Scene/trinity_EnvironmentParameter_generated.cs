// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Titan.TrinityScene
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct trinity_EnvironmentParameter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static trinity_EnvironmentParameter GetRootAstrinity_EnvironmentParameter(ByteBuffer _bb) { return GetRootAstrinity_EnvironmentParameter(_bb, new trinity_EnvironmentParameter()); }
  public static trinity_EnvironmentParameter GetRootAstrinity_EnvironmentParameter(ByteBuffer _bb, trinity_EnvironmentParameter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public trinity_EnvironmentParameter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public float Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<Titan.TrinityScene.trinity_EnvironmentParameter> Createtrinity_EnvironmentParameter(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      float value = 0.0f) {
    builder.StartTable(2);
    trinity_EnvironmentParameter.AddValue(builder, value);
    trinity_EnvironmentParameter.AddName(builder, nameOffset);
    return trinity_EnvironmentParameter.Endtrinity_EnvironmentParameter(builder);
  }

  public static void Starttrinity_EnvironmentParameter(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, float value) { builder.AddFloat(1, value, 0.0f); }
  public static Offset<Titan.TrinityScene.trinity_EnvironmentParameter> Endtrinity_EnvironmentParameter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Titan.TrinityScene.trinity_EnvironmentParameter>(o);
  }
  public static void Finishtrinity_EnvironmentParameterBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_EnvironmentParameter> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedtrinity_EnvironmentParameterBuffer(FlatBufferBuilder builder, Offset<Titan.TrinityScene.trinity_EnvironmentParameter> offset) { builder.FinishSizePrefixed(offset.Value); }
  public trinity_EnvironmentParameterT UnPack() {
    var _o = new trinity_EnvironmentParameterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(trinity_EnvironmentParameterT _o) {
    _o.Name = this.Name;
    _o.Value = this.Value;
  }
  public static Offset<Titan.TrinityScene.trinity_EnvironmentParameter> Pack(FlatBufferBuilder builder, trinity_EnvironmentParameterT _o) {
    if (_o == null) return default(Offset<Titan.TrinityScene.trinity_EnvironmentParameter>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return Createtrinity_EnvironmentParameter(
      builder,
      _name,
      _o.Value);
  }
}

public class trinity_EnvironmentParameterT
{
  public string Name { get; set; }
  public float Value { get; set; }

  public trinity_EnvironmentParameterT() {
    this.Name = null;
    this.Value = 0.0f;
  }
  public static trinity_EnvironmentParameterT DeserializeFromBinary(byte[] fbBuffer) {
    return trinity_EnvironmentParameter.GetRootAstrinity_EnvironmentParameter(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    trinity_EnvironmentParameter.Finishtrinity_EnvironmentParameterBuffer(fbb, trinity_EnvironmentParameter.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
